---
- name: Update Docker Compose file and restart container
  hosts: localhost
  vars:
    compose_file_path: ""
    image_tag: ""
  tasks:
    - name: Read docker-compose.yaml file
      slurp:
        src: "{{ compose_file_path }}"
      register: compose_file

    - name: Decode docker-compose.yaml content
      set_fact:
        compose_content: "{{ compose_file['content'] | b64decode }}"

    - name: Parse docker-compose.yaml content
      set_fact:
        compose_dict: "{{ compose_content | from_yaml }}"

    - name: Check and update image tags in docker-compose.yaml
      set_fact:
        updated_services: >-
          {{
            dict(compose_dict['services'].items() |
            map('extract', 0, 1) |
            map('extract', 1) |
            map('extract', 'image') |
            map('split', ':') |
            map('first') |
            map('combine', compose_dict['services'].keys()) |
            list)
          }}
      loop: "{{ compose_dict['services'].items() }}"
      loop_control:
        loop_var: service_item
      when: service_item[1].image.split(':')[1] != image_tag
      vars:
        updated_image: "{{ service_item[1].image.split(':')[0] + ':' + image_tag }}"
      set_fact:
        compose_dict_updated: "{{ compose_dict | combine({'services': {service_item[0]: {'image': updated_image}}}) }}"

    - name: Write updated docker-compose.yaml content
      copy:
        dest: "{{ compose_file_path }}"
        content: "{{ compose_dict_updated | to_nice_yaml }}"
      when: updated_services

    - name: Bring down Docker Compose services
      command: docker-compose -f "{{ compose_file_path }}" down
      when: updated_services

    - name: Bring up Docker Compose services
      command: docker-compose -f "{{ compose_file_path }}" up -d
      when: updated_services
