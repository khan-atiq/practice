---
- name: Update Docker Compose file and restart container
  hosts: localhost
  vars:
    compose_file_path: ""
    image_tag: ""
  tasks:
    - name: Read docker-compose.yaml file
      slurp:
        src: "{{ compose_file_path }}"
      register: compose_file

    - name: Decode docker-compose.yaml content
      set_fact:
        compose_content: "{{ compose_file['content'] | b64decode }}"

    - name: Parse docker-compose.yaml content
      set_fact:
        compose_dict: "{{ compose_content | from_yaml }}"

    - name: Check if the image tag needs to be updated
      set_fact:
        image_updated: false
      loop: "{{ compose_dict['services'].items() }}"
      when: item[1].image.split(':')[1] != image_tag
      loop_control:
        key: service_name

    - name: Update the image tag in docker-compose.yaml
      set_fact:
        compose_dict_updated: "{{ compose_dict }}"
      loop: "{{ compose_dict['services'].items() }}"
      when: item[1].image.split(':')[1] != image_tag
      loop_control:
        key: service_name
      block:
        - set_fact:
            image_updated: true
        - set_fact:
            compose_dict_updated: >
              {{ compose_dict_updated | combine({ 'services': { (item[0]): { 'image': (item[1].image.split(':')[0] + ':' + image_tag) } } }) }}

    - name: Write updated docker-compose.yaml content
      copy:
        dest: "{{ compose_file_path }}"
        content: "{{ compose_dict_updated | to_nice_yaml }}"
      when: image_updated

    - name: Bring down Docker Compose services
      command: docker-compose -f "{{ compose_file_path }}" down
      when: image_updated

    - name: Bring up Docker Compose services
      command: docker-compose -f "{{ compose_file_path }}" up -d
      when: image_updated
